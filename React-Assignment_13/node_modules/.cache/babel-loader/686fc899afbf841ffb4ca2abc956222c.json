{"ast":null,"code":"import _classCallCheck from \"/Users/firojkhan/Desktop/myflux-app2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/firojkhan/Desktop/myflux-app2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/firojkhan/Desktop/myflux-app2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/firojkhan/Desktop/myflux-app2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/firojkhan/Desktop/myflux-app2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { EventEmitter } from \"events\";\nimport dispatcher from \"../dispatcher\";\n\nvar Datastore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Datastore, _EventEmitter);\n\n  function Datastore() {\n    var _this;\n\n    _classCallCheck(this, Datastore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Datastore).call(this));\n    _this.dataOne = {};\n    _this.dataTwo = {};\n    _this.dataThree = {};\n    return _this;\n  }\n\n  _createClass(Datastore, [{\n    key: \"_setDataOne\",\n    value: function _setDataOne(data) {\n      this.dataOne = data;\n      this.emit('change');\n    }\n  }, {\n    key: \"_getDataOne\",\n    value: function _getDataOne() {\n      return this.dataOne;\n    }\n  }, {\n    key: \"_setDataTwo\",\n    value: function _setDataTwo(data) {\n      this.dataTwo = data;\n      this.emit('change');\n    }\n  }, {\n    key: \"_getDataTwo\",\n    value: function _getDataTwo() {\n      return this.dataTwo;\n    }\n  }, {\n    key: \"_setDataThree\",\n    value: function _setDataThree(data) {\n      this.dataThree = data;\n      this.emit('change');\n    }\n  }, {\n    key: \"_getDataThree\",\n    value: function _getDataThree() {\n      return this.dataThree;\n    }\n  }, {\n    key: \"_handleAction\",\n    value: function _handleAction(action) {\n      switch (action.type) {\n        case \"company\":\n          {\n            this._setDataOne(action.response);\n\n            break;\n          }\n\n        case \"location\":\n          {\n            this._setDataTwo(action.response);\n\n            break;\n          }\n\n        case \"contact\":\n          {\n            this._setDataThree(action.response);\n\n            break;\n          }\n\n        case \"default\":\n          {\n            break;\n          }\n      }\n    }\n  }]);\n\n  return Datastore;\n}(EventEmitter);\n\nvar temp = new Datastore();\ndispatcher.register(temp._handleAction.bind(temp)); // console.log(temp)\n\nexport default temp;","map":{"version":3,"sources":["/Users/firojkhan/Desktop/myflux-app2/src/store/dataStore.js"],"names":["EventEmitter","dispatcher","Datastore","dataOne","dataTwo","dataThree","data","emit","action","type","_setDataOne","response","_setDataTwo","_setDataThree","temp","register","_handleAction","bind"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IACOC,S;;;;;AACH,uBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,OAAL,GAAa,EAAb;AACA,UAAKC,OAAL,GAAa,EAAb;AACA,UAAKC,SAAL,GAAe,EAAf;AAJS;AAKZ;;;;gCAEWC,I,EAAK;AACb,WAAKH,OAAL,GAAaG,IAAb;AACA,WAAKC,IAAL,CAAU,QAAV;AACH;;;kCACY;AACT,aAAQ,KAAKJ,OAAb;AACH;;;gCACWG,I,EAAK;AACb,WAAKF,OAAL,GAAaE,IAAb;AACA,WAAKC,IAAL,CAAU,QAAV;AACH;;;kCACY;AACT,aAAQ,KAAKH,OAAb;AACH;;;kCACaE,I,EAAK;AACf,WAAKD,SAAL,GAAeC,IAAf;AACA,WAAKC,IAAL,CAAU,QAAV;AACH;;;oCACc;AACX,aAAQ,KAAKF,SAAb;AACH;;;kCACaG,M,EAAO;AACjB,cAAOA,MAAM,CAACC,IAAd;AACI,aAAK,SAAL;AAAiB;AACb,iBAAKC,WAAL,CAAiBF,MAAM,CAACG,QAAxB;;AACA;AACH;;AACD,aAAK,UAAL;AAAkB;AACd,iBAAKC,WAAL,CAAiBJ,MAAM,CAACG,QAAxB;;AACA;AACH;;AACD,aAAK,SAAL;AAAiB;AACb,iBAAKE,aAAL,CAAmBL,MAAM,CAACG,QAA1B;;AACA;AACH;;AACD,aAAK,SAAL;AAAgB;AACZ;AACH;AAfL;AAkBH;;;;EAhDoBX,Y;;AAmDzB,IAAMc,IAAI,GAAC,IAAIZ,SAAJ,EAAX;AACAD,UAAU,CAACc,QAAX,CAAoBD,IAAI,CAACE,aAAL,CAAmBC,IAAnB,CAAwBH,IAAxB,CAApB,E,CACA;;AACA,eAAeA,IAAf","sourcesContent":["import { EventEmitter } from \"events\";\nimport dispatcher from \"../dispatcher\";\n class Datastore extends EventEmitter{\n    constructor(){\n        super()\n        this.dataOne={}\n        this.dataTwo={}\n        this.dataThree={}\n    }\n\n    _setDataOne(data){\n        this.dataOne=data;\n        this.emit('change')\n    }\n    _getDataOne(){\n        return  this.dataOne\n    }\n    _setDataTwo(data){\n        this.dataTwo=data;\n        this.emit('change')\n    }\n    _getDataTwo(){\n        return  this.dataTwo;\n    }\n    _setDataThree(data){\n        this.dataThree=data\n        this.emit('change')\n    }\n    _getDataThree(){\n        return  this.dataThree\n    }\n    _handleAction(action){\n        switch(action.type){\n            case \"company\" : {\n                this._setDataOne(action.response);\n                break\n            }\n            case \"location\" : {\n                this._setDataTwo(action.response);\n                break\n            }\n            case \"contact\" : {\n                this._setDataThree(action.response);\n                break\n            }\n            case \"default\" :{\n                break;\n            }\n        }\n       \n    }\n\n}\nconst temp=new Datastore;\ndispatcher.register(temp._handleAction.bind(temp))\n// console.log(temp)\nexport default temp;"]},"metadata":{},"sourceType":"module"}